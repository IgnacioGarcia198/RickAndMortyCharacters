name: Android Build

on:
  push:

# Can be separated in two workflows and then use:
#on:
#  workflow_run:
#    workflows: ["Build and Push Docker Image"]
#    types:
#    - completed
# But for that the workflow files need to be in the default branch, or at least the first workflow.
# When project escalates we can separate the jobs in two different workflows, adding at least the first of them to the default branch.
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            docker_triggers:
              - 'Dockerfile'

      - name: Log in to GitHub Container Registry
        if: steps.changes.docker_triggers == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert repository name to lowercase
        if: steps.changes.docker_triggers == 'true'
        id: repo_name
        run: echo "repo_lowercase=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Build Docker image
        if: steps.changes.docker_triggers == 'true'
        run: docker build -t ghcr.io/${{ env.repo_lowercase }}/android-dependencies:latest .

      - name: Push Docker image
        if: steps.changes.docker_triggers == 'true'
        run: docker push ghcr.io/${{ env.repo_lowercase }}/android-dependencies:latest


  build-release:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Convert repository name to lowercase
        id: repo_name
        run: echo "repo_lowercase=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Pull pre-built Docker image
        run: docker pull ghcr.io/${{ env.repo_lowercase }}/android-dependencies:latest

      # Step 1: Decode and save the keystore file
      - name: Decode keystore
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 -d > release.keystore

      # Step 2: Write the key.properties file
      - name: Write key.properties
        run: |
         cat <<EOF > key.properties
         rickAndMortyKeyAlias=${{ secrets.RELEASE_KEY_ALIAS }}
         rickAndMortyKeyPassword=${{ secrets.RELEASE_KEY_PASSWORD }}
         rickAndMortyStoreFile=release.keystore
         rickAndMortyStorePassword=${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
         EOF


      - name: Build app using pre-built image
        run: |
          mkdir -p ${{ runner.temp }}/output
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -v ${{ runner.temp }}/output:/workspace/app/build/outputs \
            -w /workspace \
            ghcr.io/${{ env.repo_lowercase }}/android-dependencies:latest \
            ./gradlew assembleRelease

      - name: Check paths
        run: |
          ls -la ${{ github.workspace }}
          ls -la ${{ runner.temp }}/output

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: ${{ runner.temp }}/output/apk/release/app-release.apk
      
